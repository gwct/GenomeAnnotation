from glob import glob
from os.path import basename
import yaml
from os import system

configfile: "config/config.yaml"
res_config = yaml.load(open("config/resources.yaml"),Loader=yaml.FullLoader)

###
system("rm gtflist.txt")
   
SAMPLES = list(set([basename(i.split('/')[-1].split('_')[1]) for i in glob("%s*bam" % config["bamDir"])]))

for sample in SAMPLES:
   system("echo %s%s_stringtie_%s.gtf >> gtflist.txt" % (config["assemblyDir"],sample,config["alignment_tool"]))

system("cat gtflist.txt")

### RULES ###

rule all:
    input:
        config["mergeDir"] + config["mergeLabel"] + "_stringtie-merge_" + config["alignment_tool"] + ".gtf"	
rule stringtie:
    input:
        config["bamDir"] + "sorted_" + "{sample}" + "_" + config["alignment_tool"] + ".bam"
    output:
        config["assemblyDir"] + "{sample}" + "_stringtie_" + config["alignment_tool"] + ".gtf"
    shell:
        "stringtie {input} -p %s -o {output}"  % res_config['stringtie']['cpus']

rule merge:
    input:
        expand("{outdir}{sample}_stringtie_{aligner}.gtf", outdir=config["assemblyDir"],sample=SAMPLES,aligner=config["alignment_tool"])
    output:
        config["mergeDir"] + config["mergeLabel"] + "_stringtie-merge_" + config["alignment_tool"] + ".gtf"
    shell:
        "stringtie -p %s --merge gtflist.txt -o %s%s_stringtie-merge_%s.gtf" % (res_config['merge']['cpus'],config["mergeDir"],config["mergeLabel"],config["alignment_tool"]) 
