from glob import glob
from os.path import basename
import yaml
from os import system

configfile: "config/config.yaml"
res_config = yaml.load(open("config/resources.yaml"),Loader=yaml.FullLoader)
SAMPLES = list(set([basename(i.split('/')[-1].split('_')[0]) for i in glob("%s*_1.fq.gz" % config["fastqDir"])]))
print(SAMPLES)
TABLES = ' '.join(expand("{outdir}{sample}_STAR1stpassSJ.out.tab", outdir=config["Star1stPassOutdir"],sample=SAMPLES))

system("touch scallop.gtflist.hisat2.txt")
system("rm scallop.gtflist.hisat2.txt")

system("touch scallop.gtflist.star.txt")
system("rm scallop.gtflist.star.txt")

system("touch stringtie-hisat2_gtflist.txt")
system("rm stringtie-hisat2_gtflist.txt")

system("touch stringtie-star_gtflist.txt")
system("rm stringtie-star_gtflist.txt")

for sample in SAMPLES:
   system("echo %s%s_scallop-hisat2.gtf >> scallop.gtflist.hisat2.txt" % (config["ScallopHisat2AssemblyDir"],sample))
   system("echo %s%s_scallop-star.gtf >> scallop.gtflist.star.txt" % (config["ScallopStarAssemblyDir"],sample))
   
   system("echo %s%s_stringtie-star.gtf >> stringtie-star_gtflist.txt" % (config["StringtieStarAssemblyDir"],sample))
   system("echo %s%s_stringtie-hisat2.gtf >> stringtie-hisat2_gtflist.txt" % (config["StringtieHisat2AssemblyDir"],sample))

### RULES ###

rule all:
    input:
        "mytask.taco.hisat2.done",
        "mytask.taco.star.done",
        config["StringtieStarMergeDir"] + config["speciesname"] + "_stringtie-star_merge.gtf",
        config["StringtieHisat2MergeDir"] + config["speciesname"] + "_stringtie-hisat2_merge.gtf" 

include: "workflow/rules/rnaseq.smk"	
